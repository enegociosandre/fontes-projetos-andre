#Include "RwMake.ch"
#Include 'Protheus.ch'
#Include 'Topconn.ch'

***************************************************************************************************************
/**
 * Rotina		:	ETQPRO() 
 * Autor		:	Gerson R. Schiavo - TOTVS IP
 * Data			:	09/05/2016
 * Descrição	:	Impressão de Etiqueta de Produto
 */  
***************************************************************************************************************
User Function ETQPRO()

Local aArea			:= GetArea()
Local cPerg 		:= 'ETQPRO'

Private lRotAut		:= .f.

if FUNNAME() <> "MATA103"

	ValidPerg(cPerg)
	
	If !(Pergunte(cPerg,.T.))
		Return
	Endif
else
	mv_par01:= SF1->F1_DOC
	mv_par02:= SF1->F1_SERIE
	mv_par03:= SF1->F1_FORNECE
	mv_par04:= SF1->F1_LOJA
	lRotAut:= .t.
endif

Processa( {|| fImpressao() },"Imprimindo Etiqueta de Produto..." )   

Return


***************************************************************************************************************
/**
 * Rotina		:	fImpressao() 
 * Autor		:	Gerson R. Schiavo - TOTVS IP
 * Data			:	26/02/2016
 * Descrição	:	Impressão de Etiqueta de Volume para Expedição
 */  
***************************************************************************************************************
Static Function fImpressao()

Local cAliasSD1		:= GetNextAlias()
Local cAliasSBF		:= GetNextAlias()
Local cQuery		:= ""
Local cPorta   		:= "LPT1"
Local nQtdEtq		:=0
Local nQuant		:=0
Local nResto		:=0
Local cNomeFor		:= ""
Local cCodBar		:= ""


if Select(cAliasSD1) <> 0
	(cAliasSD1)->(dbCloseArea())
endif

cQuery := "SELECT D1_FORNECE, D1_LOJA, D1_DOC, D1_SERIE, D1_COD, D1_QUANT, D1_LOCAL, B1_CODBAR, B1_DESC, B1_QE, B1_DESC "+CRLF
cQuery += "FROM " + RetSQLName("SD1") + " D1 "+CRLF
cQuery += "		INNER JOIN "+RetSQLName("SB1")+" B1 ON " +CRLF
cQuery += "			  B1_FILIAL = '"+xFilial("SB1")+"' AND " +CRLF
cQuery += "			  B1_COD = D1_COD AND" +CRLF
cQuery += "			  B1.D_E_L_E_T_ = ' ' " +CRLF             
cQuery	+= "WHERE "+CRLF
cQuery	+= "  D1_FILIAL  = '" + xFilial("SD1") + "' AND "+CRLF
cQuery  += "  D1_DOC     = '" + mv_par01 + "'   	AND "+CRLF
cQuery  += "  D1_SERIE   = '" + mv_par02 + "'   	AND "+CRLF
cQuery  += "  D1_FORNECE = '" + mv_par03 + "'   	AND "+CRLF
cQuery  += "  D1_LOJA    = '" + mv_par04 + "'   	AND "+CRLF
if !lRotAut
	cQuery  += "  D1_COD    >= '" + mv_par05 + "'   	AND "+CRLF
	cQuery  += "  D1_COD    <= '" + mv_par06 + "'   	AND "+CRLF
endif	
cQuery	+= "  D1.D_E_L_E_T_ = ' ' "+CRLF
cQuery  += "ORDER BY D1_COD "+CRLF
TcQuery cQuery New Alias &cAliasSD1


if (cAliasSD1)->(!eof())

	MSCBPRINTER("ZEBRA",cPorta,,,.f.,,,,,,.t.)
	MSCBCHKSTATUS(.f.)

	//Impressão da Etiqueta da Nota Fiscal
	***********************************************************************************************************************************
	MSCBBEGIN(1, 6)
	
	cNomeFor:= Posicione("SA2",1,xfilial("SA2") + (cAliasSD1)->(D1_FORNECE+D1_LOJA),"A2_NOME")
	
	cCodBar:= (cAliasSD1)->(D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)+"0"
	
	MSCBWrite("^XA")
	MSCBWrite("^MMT")
	MSCBWrite("^PW679")
	MSCBWrite("^LL0280")
	MSCBWrite("^LS0")
	MSCBWrite("^FT59,141^A0N,31,31^FH\^FDFornecedor^FS")
	MSCBWrite("^FT59,90^A0N,31,31^FH\^FDS\82rie^FS")
	MSCBWrite("^FT59,45^A0N,31,31^FH\^FDNota Fiscal^FS")
	MSCBWrite("^FT59,182^A0N,28,28^FH\^FD"+Alltrim(cNomeFor)+"^FS")
	MSCBWrite("^FT237,139^A0N,28,28^FH\^FD"+Alltrim((cAliasSD1)->D1_FORNECE)+'/'+Alltrim((cAliasSD1)->D1_LOJA)+"^FS")
	MSCBWrite("^FT156,89^A0N,28,28^FH\^FD"+Alltrim((cAliasSD1)->D1_SERIE)+"^FS")
	MSCBWrite("^FT237,43^A0N,28,28^FH\^FD"+Alltrim((cAliasSD1)->D1_DOC)+"^FS")
	MSCBWrite("^BY2,3,49^FT56,253^BCN,,Y,N")
	MSCBWrite("^FD>:"+Alltrim(cCodBar)+"^FS")
	MSCBWrite("^PQ1,0,1,Y^XZ")
	
	MSCBEND()
	***********************************************************************************************************************************
	
	(cAliasSD1)->(dbGoTop())
	While !(cAliasSD1)->(Eof())

		IncProc("Produto "+Alltrim((cAliasSD1)->D1_COD ))          

		if (cAliasSD1)->B1_QE > 0 .and. (cAliasSD1)->D1_QUANT >= (cAliasSD1)->B1_QE 
			nQtdEtq:= INT((cAliasSD1)->D1_QUANT / (cAliasSD1)->B1_QE)
			nQuant := (cAliasSD1)->B1_QE
			nResto := (cAliasSD1)->D1_QUANT - (nQuant * nQtdEtq) //(((cAliasSD1)->D1_QUANT / (cAliasSD1)->B1_QE) - nQtdEtq ) * 100
		else
			nQtdEtq:= 1
			nQuant := (cAliasSD1)->D1_QUANT
			nResto := 0
		endif	
					 
		if Select(cAliasSBF) <> 0
			(cAliasSBF)->(dbCloseArea())
		endIf
		
		cQuery  := " SELECT MAX(BF_LOCALIZ) BF_LOCALIZ "+CRLF
		cQuery	+= " FROM " + RetSQLName("SBF")+CRLF
		cQuery	+= " WHERE "+CRLF
		cQuery	+= "     BF_FILIAL	= 	'" + xFilial("SBF") + "'			AND "+CRLF
		cQuery	+= "     BF_PRODUTO	= 	'" + (cAliasSD1)->D1_COD + "'		AND "+CRLF
		cQuery	+= "     BF_LOCAL	=	'" + (cAliasSD1)->D1_LOCAL + "'		AND "+CRLF
		cQuery	+= "     BF_QUANT	>	0									AND "+CRLF
		cQuery	+= " 	 D_E_L_E_T_ = ' ' "+CRLF
		TcQuery cQuery New Alias &cAliasSBF   
		
		For x:= 1 to nQtdEtq
					
			MSCBBEGIN(1, 6)
			
			MSCBWrite("~DG000.GRF,06272,028,")
			MSCBWrite(",:::::::::::::::::::K0I4H0I40,K07FF00FFC0,:K02AB00AA80,K07FF00FFC0,K02EA00EE80,K03FF01FF80,K01AA00AA80,K01FF01FF0gU015,L0AE80AE0gV02,K01FF81FF01FF401101H105F45F0H01FF80H07FF0051101,L0HA81AB03AHA03BCA3BCFACAB8003AHAI0HAB80BHBC0,L0HFC3FF0FIF01FDF3FDFKFH0JFH07FHFC0FHFC0,L0EA82EB0AEAE83AEA2AEAEAEAF00AEAE806EAEE0EHEC0,L07FC3FF1FIFC1FDF1FMF83FIFC07FIF1FHFC0,L06A82AA2AJA1AHA3AMA82AJA0AIAB8AHAC0,L07FC7FF7FJF1FHF3FMFC7FJF1FJFCFHFC0,L02AC2AA6EA3AF2AAE2EAEAHAEAC6EE2AF1ABAEACEAAC0,L07FC7FEFFC1FF1FHF1FJFDFFCFFC1FF1FF07FCFHFC0,L02AA2AIA80AE1AA82AA0AB86ACAA83AE2AA02B8AHA,L07FE7FCFFC7FC1FF03FE0FF07FDFF87FC7FC1FF0FFC,L02AE6ECEA06F03AE02AE0EB02ECEB86F02EC3EC0AE8,L01FF7FCFF1FF01FC01FE0FF07FDFF1FF03FC7F81FF8,L01AIA8ABBA803A803AA0AB02ACABBA802A8AB00AA8,L01FIFCFIFH01FC03FE0FF07FDFIFH07FHFC00FF8,M0EAEA8AEAE002EC02EA0EF02ACAEAC002EAF0H0EA8,L01FIF8FHFC071FC01FE0FF07FDFHFC073FHF018FF8,M0IAB8AAB00A1A802AA0AB02ACAAB00A2AA8038AA8,M0JF0FHFD7F1FC03FE0FF07FCFHFD7F1FFD5F8FF8,M0HEAF06AEFEA3AE02AE0EB02EC6EIEA1AEAEA8AE8,M07FHF07FJF1FC01FE0FF07FC7FJF1FJF9FF8,M06AHA02AJA1A803AA0AB02AC2AJA0AJA8AA8,M07FHF01FJF1FC03FE0FF07FC1FJF07FIF8FF8,M06AEA00EAEAE2EC02EA0EB02AC0EAHAE06AEAB8EA8,M07FFE007FHFC1FC01FE0FF07FC07FHFC01FIF0FF8,M03FFE001AAB01BC03BA0BB03BC01AAB0H0EAA80BB8,M015540H07FC015401560550554007FC0H05FF00550,,::::::::::::::::O01FRFC0L07FRF8,P0HBFBFBFBFBFBFA0L03BBFBFBFBHBFBB0,P0F5Q560L0S570,P060Q020L0C0Q0E0,P070Q010K01C0P01C0,P030Q0180J0180Q080,P038FPF1C0J0387FHF7FHF7F71C0,P0182AOA180J030APA280,P01C55DKD5DD1C0J0715DLD5DC7,Q0A2AOA8A0J0E0AOA82,Q0717575757577C70J0C357L75FC6,Q020AOA820I01C2AHA202022F84,Q031D5N5C30I0185L5157F0C,Q0182A2AA8AJA180H030A2ANA18,Q01C7757F75757F1C0H07057F7F7F7FFC38,R082A0AMA0E0H0E0A2ALAE830,R0C151DIDI5D07001C155DLDF870,R0A0A8AMA83001828AMAB860,R071F47M7C7001C557M7F0E0,R030AA2ALA83802822AMAE0C0,R0305D1DLDC1C07051DLDFE1C0,R0182A0AMA0C020A2ALABC380,R01C775F7K7F0E0E1477F7J7FC7,S0C2A0AMA060E082ALAE83,S0E1D15DLD871C115DLDF07,S060A82ALA839820AMAB0A,S070747M7C3F8517L7HF1C,S038282AMA1B022AMAE18,S01C1D1DMD0E145DLDFC30,T080A0AMA04082ALAB860,T061717F7H7F7FC4757F7H7F77F870,T060A02ALA8020AMAF8E0,T070D05DLDC055DLDHF1C0,T038A82AMA0A8ANA180,T01C7457L7F17N7HF380,U0C2A0AMA0AOAE3,T01C5D15DLD1D5DLDFC7,U0A2A0AWAB86,U071F577F7J7F7F7H7F7H7FC6,U030H02AVAF0C,U030H01DUDHF1C,U01080H0UABA18,U01C7C0H017R7FC38,V0C2E0J0RAE830,V0C1FC0I017DNDHF870,V0A0A80K0PAB0A0,V070FC40J05F7H7F7H7HF1C0,V0306A20K02AMAE080,V0387D1C0K05DKDFC1C0,V0182A0A0L0LABC380,V01C3F57C0K05F7I7FC7,W0E1E02E0L02AIAF86,W071F17F80K01DIDF0E,W020A82AE0L02AIA0C,W0707D5FF0L01F7FE1C,W0282A2EA80L02AAE38,W01C3D1FHFM01DFC38,X0A0A0AHA80M0B860,X061F57FHFM057C60,X071A82EAE80K0238C0,X031FD5FHFC0K0H51C0,X018A80AHAB0L0A180,X01C7D5FIFC0I0H543,Y0C2E0EEAEC0J0282,Y0C3F17FIFJ01543,Y061A8AIAB0J0H82,Y061F47FIFC0H0H504,Y020A82AEAEE0H0H20C,Y010FD5FJFH01551C,Y018680AJA80H0A18,Y01C7F5FJFC01543C,g0C3E8EAEAEF00A870,g061F57FJFC15070,g060A82AJAC080A0,g070FC7FKFH51C0,g0286A2EAHAEBAA180,g0187D1FKFD4180,gG0C2A0AKAH83,g01C1F5FLF47,gG0E1A0EEAEAEE0E,gG071F57FKF0C,gG030A82AKA08,gG0387C7FJFC1C,gG0382A2AEAEAC28,gG01C3D1FJFC70,gH0A0A0AJA8A0,gH071F57FIF8E0,gH030E82AEAF0C0,gH038FD5FIF1C0,gH018E80AIA380,gH01C7F5FHFC3,gI0E2E0EAEC2,gI061F17FF86,gI061B8AAB84,gI071FD7FF0C,gI020EA2EA0C,gI0107D7FE1C,gI0182A2A818,gI01C7F7FC30,gJ0C3AHA830,gJ071FHF0E0,gJ020AHA080,gJ0707FE1C0,gJ0382AC380,gJ01C3FC3,gK0C3A83,gK0E1F07,gK060F0E,gK070F1C,gK038618,gK01C41C,gK018038,gK01C070,gL0A060,gL071C0,gL03080,gL01980,gL01B80,gL01F,gM0E,gM04,,gM04,,::::::::::::::::::::::::::^XA")
			MSCBWrite("^MMT")
			MSCBWrite("^PW679")
			MSCBWrite("^LL0280")
			MSCBWrite("^LS0")
			MSCBWrite("^FT0,224^XG000.GRF,1,1^FS")
			MSCBWrite("^FT16,265^A0N,25,24^FH\^FD"+Substr((cAliasSD1)->B1_DESC,1,40)+"^FS")
			MSCBWrite("^FT264,38^A0N,23,24^FH\^FDProduto^FS")
			MSCBWrite("^FT16,230^A0N,23,24^FH\^FDDescri\87\C6o do Produto^FS")
			MSCBWrite("^BY2,3,51^FT396,199^BCN,,N,N")
			MSCBWrite("^FD>:"+Alltrim(STR(nQuant))+"^FS")
			MSCBWrite("^BY2,3,51^FT264,99^BCN,,N,N")
			MSCBWrite("^FD>:"+Alltrim((cAliasSD1)->B1_CODBAR)+"^FS")
			MSCBWrite("^FT263,166^A0N,25,24^FH\^FDQtd / Emb^FS")
			MSCBWrite("^FT261,201^A0N,25,24^FH\^FD"+Alltrim(STR(nQuant))+' / '+Alltrim(STR((cAliasSD1)->B1_QE))+"^FS")
			MSCBWrite("^FT523,233^A0N,23,24^FH\^FDEnd. Sugerido^FS")
			MSCBWrite("^FT524,266^A0N,23,24^FH\^FD"+(cAliasSD1)->D1_LOCAL+'-'+Alltrim((cAliasSBF)->BF_LOCALIZ)+"^FS")
			MSCBWrite("^FT264,123^A0N,23,24^FH\^FD"+Alltrim((cAliasSD1)->D1_COD)+"^FS")
			MSCBWrite("^PQ1,0,1,Y^XZ")
			MSCBWrite("^XA^ID000.GRF^FS^XZ")

			MSCBEND()
			
		Next x	
		
		if nResto > 0
		
			//nQuant:= 1
			
			MSCBBEGIN(1, 6)
			
			MSCBWrite("~DG000.GRF,06272,028,")
			MSCBWrite(",:::::::::::::::::::K0I4H0I40,K07FF00FFC0,:K02AB00AA80,K07FF00FFC0,K02EA00EE80,K03FF01FF80,K01AA00AA80,K01FF01FF0gU015,L0AE80AE0gV02,K01FF81FF01FF401101H105F45F0H01FF80H07FF0051101,L0HA81AB03AHA03BCA3BCFACAB8003AHAI0HAB80BHBC0,L0HFC3FF0FIF01FDF3FDFKFH0JFH07FHFC0FHFC0,L0EA82EB0AEAE83AEA2AEAEAEAF00AEAE806EAEE0EHEC0,L07FC3FF1FIFC1FDF1FMF83FIFC07FIF1FHFC0,L06A82AA2AJA1AHA3AMA82AJA0AIAB8AHAC0,L07FC7FF7FJF1FHF3FMFC7FJF1FJFCFHFC0,L02AC2AA6EA3AF2AAE2EAEAHAEAC6EE2AF1ABAEACEAAC0,L07FC7FEFFC1FF1FHF1FJFDFFCFFC1FF1FF07FCFHFC0,L02AA2AIA80AE1AA82AA0AB86ACAA83AE2AA02B8AHA,L07FE7FCFFC7FC1FF03FE0FF07FDFF87FC7FC1FF0FFC,L02AE6ECEA06F03AE02AE0EB02ECEB86F02EC3EC0AE8,L01FF7FCFF1FF01FC01FE0FF07FDFF1FF03FC7F81FF8,L01AIA8ABBA803A803AA0AB02ACABBA802A8AB00AA8,L01FIFCFIFH01FC03FE0FF07FDFIFH07FHFC00FF8,M0EAEA8AEAE002EC02EA0EF02ACAEAC002EAF0H0EA8,L01FIF8FHFC071FC01FE0FF07FDFHFC073FHF018FF8,M0IAB8AAB00A1A802AA0AB02ACAAB00A2AA8038AA8,M0JF0FHFD7F1FC03FE0FF07FCFHFD7F1FFD5F8FF8,M0HEAF06AEFEA3AE02AE0EB02EC6EIEA1AEAEA8AE8,M07FHF07FJF1FC01FE0FF07FC7FJF1FJF9FF8,M06AHA02AJA1A803AA0AB02AC2AJA0AJA8AA8,M07FHF01FJF1FC03FE0FF07FC1FJF07FIF8FF8,M06AEA00EAEAE2EC02EA0EB02AC0EAHAE06AEAB8EA8,M07FFE007FHFC1FC01FE0FF07FC07FHFC01FIF0FF8,M03FFE001AAB01BC03BA0BB03BC01AAB0H0EAA80BB8,M015540H07FC015401560550554007FC0H05FF00550,,::::::::::::::::O01FRFC0L07FRF8,P0HBFBFBFBFBFBFA0L03BBFBFBFBHBFBB0,P0F5Q560L0S570,P060Q020L0C0Q0E0,P070Q010K01C0P01C0,P030Q0180J0180Q080,P038FPF1C0J0387FHF7FHF7F71C0,P0182AOA180J030APA280,P01C55DKD5DD1C0J0715DLD5DC7,Q0A2AOA8A0J0E0AOA82,Q0717575757577C70J0C357L75FC6,Q020AOA820I01C2AHA202022F84,Q031D5N5C30I0185L5157F0C,Q0182A2AA8AJA180H030A2ANA18,Q01C7757F75757F1C0H07057F7F7F7FFC38,R082A0AMA0E0H0E0A2ALAE830,R0C151DIDI5D07001C155DLDF870,R0A0A8AMA83001828AMAB860,R071F47M7C7001C557M7F0E0,R030AA2ALA83802822AMAE0C0,R0305D1DLDC1C07051DLDFE1C0,R0182A0AMA0C020A2ALABC380,R01C775F7K7F0E0E1477F7J7FC7,S0C2A0AMA060E082ALAE83,S0E1D15DLD871C115DLDF07,S060A82ALA839820AMAB0A,S070747M7C3F8517L7HF1C,S038282AMA1B022AMAE18,S01C1D1DMD0E145DLDFC30,T080A0AMA04082ALAB860,T061717F7H7F7FC4757F7H7F77F870,T060A02ALA8020AMAF8E0,T070D05DLDC055DLDHF1C0,T038A82AMA0A8ANA180,T01C7457L7F17N7HF380,U0C2A0AMA0AOAE3,T01C5D15DLD1D5DLDFC7,U0A2A0AWAB86,U071F577F7J7F7F7H7F7H7FC6,U030H02AVAF0C,U030H01DUDHF1C,U01080H0UABA18,U01C7C0H017R7FC38,V0C2E0J0RAE830,V0C1FC0I017DNDHF870,V0A0A80K0PAB0A0,V070FC40J05F7H7F7H7HF1C0,V0306A20K02AMAE080,V0387D1C0K05DKDFC1C0,V0182A0A0L0LABC380,V01C3F57C0K05F7I7FC7,W0E1E02E0L02AIAF86,W071F17F80K01DIDF0E,W020A82AE0L02AIA0C,W0707D5FF0L01F7FE1C,W0282A2EA80L02AAE38,W01C3D1FHFM01DFC38,X0A0A0AHA80M0B860,X061F57FHFM057C60,X071A82EAE80K0238C0,X031FD5FHFC0K0H51C0,X018A80AHAB0L0A180,X01C7D5FIFC0I0H543,Y0C2E0EEAEC0J0282,Y0C3F17FIFJ01543,Y061A8AIAB0J0H82,Y061F47FIFC0H0H504,Y020A82AEAEE0H0H20C,Y010FD5FJFH01551C,Y018680AJA80H0A18,Y01C7F5FJFC01543C,g0C3E8EAEAEF00A870,g061F57FJFC15070,g060A82AJAC080A0,g070FC7FKFH51C0,g0286A2EAHAEBAA180,g0187D1FKFD4180,gG0C2A0AKAH83,g01C1F5FLF47,gG0E1A0EEAEAEE0E,gG071F57FKF0C,gG030A82AKA08,gG0387C7FJFC1C,gG0382A2AEAEAC28,gG01C3D1FJFC70,gH0A0A0AJA8A0,gH071F57FIF8E0,gH030E82AEAF0C0,gH038FD5FIF1C0,gH018E80AIA380,gH01C7F5FHFC3,gI0E2E0EAEC2,gI061F17FF86,gI061B8AAB84,gI071FD7FF0C,gI020EA2EA0C,gI0107D7FE1C,gI0182A2A818,gI01C7F7FC30,gJ0C3AHA830,gJ071FHF0E0,gJ020AHA080,gJ0707FE1C0,gJ0382AC380,gJ01C3FC3,gK0C3A83,gK0E1F07,gK060F0E,gK070F1C,gK038618,gK01C41C,gK018038,gK01C070,gL0A060,gL071C0,gL03080,gL01980,gL01B80,gL01F,gM0E,gM04,,gM04,,::::::::::::::::::::::::::^XA")
			MSCBWrite("^MMT")
			MSCBWrite("^PW679")
			MSCBWrite("^LL0280")
			MSCBWrite("^LS0")
			MSCBWrite("^FT0,224^XG000.GRF,1,1^FS")
			MSCBWrite("^FT16,265^A0N,25,24^FH\^FD"+Substr((cAliasSD1)->B1_DESC,1,40)+"^FS")
			MSCBWrite("^FT264,38^A0N,23,24^FH\^FDProduto^FS")
			MSCBWrite("^FT16,230^A0N,23,24^FH\^FDDescri\87\C6o do Produto^FS")
			MSCBWrite("^BY2,3,51^FT396,199^BCN,,N,N")
			MSCBWrite("^FD>:"+Alltrim(STR(nResto))+"^FS")
			MSCBWrite("^BY2,3,51^FT264,99^BCN,,N,N")
			MSCBWrite("^FD>:"+Alltrim((cAliasSD1)->B1_CODBAR)+"^FS")
			MSCBWrite("^FT263,166^A0N,25,24^FH\^FDQtd / Emb^FS")
			MSCBWrite("^FT261,201^A0N,25,24^FH\^FD"+Alltrim(STR(nResto))+' / '+Alltrim(STR((cAliasSD1)->B1_QE))+"^FS")
			MSCBWrite("^FT523,233^A0N,23,24^FH\^FDEnd. Sugerido^FS")
			MSCBWrite("^FT524,266^A0N,23,24^FH\^FD"+(cAliasSD1)->D1_LOCAL+'-'+Alltrim((cAliasSBF)->BF_LOCALIZ)+"^FS")
			MSCBWrite("^FT264,123^A0N,23,24^FH\^FD"+Alltrim((cAliasSD1)->D1_COD)+"^FS")
			MSCBWrite("^PQ1,0,1,Y^XZ")
			MSCBWrite("^XA^ID000.GRF^FS^XZ")

			MSCBEND()
		
		endif
	
		(cAliasSD1)->(dbSkip())
	enddo
			
	MSCBCLOSEPRINTER()

endif

Return

******************************************************************************************************************
******************************************************************************************************************
&& Funcao: ValidPerg(cPerg)
&& Descricao: Verifica a existencia do grupo de perguntas, caso nao exista cria.
******************************************************************************************************************
******************************************************************************************************************
Static Function ValidPerg(cPerg)  

	Local sAlias := Alias()
	Local aRegs := {}
	Local i,j

	dbSelectArea("SX1")
	dbSetOrder(1)
	cPerg := PADR(cPerg,Len(SX1->X1_GRUPO))

	// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05
	aAdd(aRegs, {cPerg, "01", "Nota Fiscal "	,"" ,"" ,"mv_ch1", "C", 09, 0, 0, "G", "", "mv_par01",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SF1ETQ"}) 
	aAdd(aRegs, {cPerg, "02", "Série"			,"" ,"" ,"mv_ch2", "C", 03, 0, 0, "G", "", "mv_par02",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}) 
	aAdd(aRegs, {cPerg, "03", "Fornecedor"		,"" ,"" ,"mv_ch3", "C", 06, 0, 0, "G", "", "mv_par03",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SA2"}) 
	aAdd(aRegs, {cPerg, "04", "Loja"			,"" ,"" ,"mv_ch4", "C", 02, 0, 0, "G", "", "mv_par04",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}) 
	aAdd(aRegs, {cPerg, "05", "Produto De "		,"" ,"" ,"mv_ch5", "C", 15, 0, 0, "G", "", "mv_par05",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SB1"}) 
	aAdd(aRegs, {cPerg, "06", "Produto Até"		,"" ,"" ,"mv_ch6", "C", 15, 0, 0, "G", "", "mv_par06",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SB1"}) 
	
	For i:=1 to Len(aRegs)
		If !dbSeek (cPerg + aRegs[i,2])
			RecLock("SX1",.T.)
			For j:=1 to FCount()
				If j <= Len(aRegs[i])
					FieldPut(j,aRegs[i,j])
				Endif
			Next
			MsUnlock()
		Endif
	Next
	dbSelectArea(sAlias)
Return

