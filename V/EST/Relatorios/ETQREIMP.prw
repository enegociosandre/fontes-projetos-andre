#Include "RwMake.ch"
#Include 'Protheus.ch'
#Include 'Topconn.ch'

***************************************************************************************************************
/**
 * Rotina		:	ETQREIMP() 
 * Autor		:	Gerson R. Schiavo - TOTVS IP
 * Data			:	09/05/2016
 * Descrição	:	Reimpressão de Etiqueta de Produto
 */  
***************************************************************************************************************
User Function ETQREIMP()

Local aArea			:= GetArea()
Local cPerg 		:= 'ETQREI'

While .t.
	ValidPerg(cPerg)
	
	If !(Pergunte(cPerg,.T.))
		Return
	Endif
	
	Processa( {|| fImpressao() },"Reimprimindo Etiqueta de Produto..." )   
enddo

Return


***************************************************************************************************************
/**
 * Rotina		:	fImpressao() 
 * Autor		:	Gerson R. Schiavo - TOTVS IP
 * Data			:	26/02/2016
 * Descrição	:	Impressão de Etiqueta de Volume para Expedição
 */  
***************************************************************************************************************
Static Function fImpressao()

Local cQuery		:= ""
Local cPorta   		:= "LPT1"
Local nQtdEtq		:=0
Local nQuant		:=0


dbSelectArea("SB1")
if dbSeek(xFilial("SB1")+mv_par01)

	MSCBPRINTER("ZEBRA",cPorta,,,.f.,,,,1000,,.t.)
	MSCBCHKSTATUS(.f.)
	//MSCBBEGIN(1, 6)

	IncProc("Produto "+Alltrim(SB1->B1_COD))          
			
	For x:= 1 to mv_par03
	
		MSCBBEGIN(1,6)

		MSCBWrite("~DG000.GRF,06272,028,")
		MSCBWrite(",:::::::::::::::K0I4H0I40,K07FF00FFC0,:K02AB00AA80,K07FF00FFC0,K02EA00EE80,K03FF01FF80,K01AA00AA80,K01FF01FF0gU015,L0AE80AE0gV02,K01FF81FF00150W0140J050K015,L0HA81AB03AHA03BCA3BCFACAB8003AHAI0HAB80BHBC0,L0HFC3FF0FIF01FDF3FDFKFH0JFH07FHFC0FHFC0,L0EA82EB0AEAE83AEA2AEAEAEAF00AEAE806EAEE0EHEC0,L07FC3FF1FIFC1FDF1FMF83FIFC07FIF1FHFC0,L06A82AA2AJA1AHA3AMA82AJA0AIAB8AHAC0,L07FC7FF7FJF1FHF3FMFC7FJF1FJFCFHFC0,L02AC2AA6EA3AF2AAE2EAEAHAEAC6EE2AF1ABAEACEAAC0,L07FC7FEFFC1FF1FHF1FJFDFFCFFC1FF1FF07FCFHFC0,L02AA2AIA80AE1AA82AA0AB86ACAA83AE2AA02B8AHA,L07FE7FCFFC7FC1FF03FE0FF07FDFF87FC7FC1FF0FFC,L02AE6ECEA06F03AE02AE0EB02ECEB86F02EC3EC0AE8,L01FF7FCFF1FF01FC01FE0FF07FDFF1FF03FC7F81FF8,L01AIA8ABBA803A803AA0AB02ACABBA802A8AB00AA8,L01FF7FCFIFH01FC03FE0FF07FDFIFH07FHFE00FF8,L01EAEA8AEAF002EC02EA0EF02ACAEAE002EAE800EA8,L01FIF8FHFE011FC01FE0FF07FDFHFC013FHFI0HF8,M0IAB8AAB00A1A802AA0AB02ACAAB00A2AA8038AA8,M0JF0FHFD7F1FC03FE0FF07FCFHFD7F1FFD5F8FF8,M0HEAF06AEFEA3AE02AE0EB02EC6EIEA1AEAEA8AE8,M07FHF07FJF1FC01FE0FF07FC7FJF1FJF9FF8,M06AHA02AJA1A803AA0AB02AC2AJA0AJA8AA8,M07FHF01FJF1FC03FE0FF07FC1FJF07FIF8FF8,M06AEA00EAEAE2EC02EA0EB02AC0EAHAE06AEAB8EA8,M07FFE007FHFC1FC01FE0FF07FC07FHFC01FIF0FF8,M03FFE001AAB01BC03BA0BB03BC01AAB0H0EAA80BB8,M015540H07FC015401560550554007FC0H05FF00550,,:::::::::::::::::O01ARA80L02AQAB8,O01FRFE0L07FRF0,P0A2Q260L0E2Q2E0,P070Q010K01C0P01C0,P030Q0180J0180Q080,P038FPF1C0J0387FHF7FHF7F71C0,P0182AOA180J030APA280,P01C55DKD5DD1C0J0715DLD5DC7,Q0A2AOA8A0J0E0AOA82,Q0717575757577C70J0C357L75FC6,Q020AOA820I01C2AHA202022F84,Q031D5N5C30I0185L5157F0C,Q030A82AA88AIA380H03828AHAI8IA08,Q0107757755757E1C0H070557K7HFE18,R082A2AMA0C0H060A2ALAEC38,R0C151DIDI5D0C0H0E155DLDFC30,R0C0A8AMA820H0C08AMAB830,R0E1747M787001C357M7F070,R060A82ALA83001828AMAF0E0,R0305D1DLDC1C07051DLDFE1C0,R0182A0AMA0C020A2ALABC380,R01C775F7K7F0E0E1477F7J7FC7,S0C2A0AMA060E082ALAE83,S0E1D15DLD871C115DLDF07,S060A82ALA839820AMAB0A,S070747M7C3F8517L7HF1C,S038282AMA1B022AMAE18,S0185C1DLDF1F041DLDFC18,S0182A0ALAB0A082AMA830,S01C1717F7H7F7F04147F7F7F77FC70,T0E0A02ALA8028AMAF860,T071D05DLDC05H5MDF8C0,T030A82ALA8028AMAB080,T030F457L7E0757M7F1C0,U0C2A0AMA0AOAE3,T01C5D15DLD1D5DLDFC7,U0A2A0AWAB86,U071F577F7J7F7F7H7F7H7FC6,U030H02AVAF0C,U030H01DUDHF1C,U01080H0UABA18,U01870H057S7FE18,V08380I02AQAEC28,V0C3F0I015DPDFC70,V0A1A80J0QAB860,V071FC0J01FF7H7F7F7FF060,V020EA0K02ANAF0E0,V0707D50K03DLDHF1C0,V0386A080K0MABE180,V01C7F570K017K7FC780,W0E1E02E0L02AIAF86,W071F17F80K01DIDF0E,W020A82AE0L02AIA0C,W0707D5FF0L01F7FE1C,W0282A2EA80L02AAE38,W01C3D1FHFM01DFC38,X082A0AAB80L02BC30,X0E1F57FFC0L05FC70,X060A02EAE0M0E8E0,X071F55FHF80K0171C0,X030A80AHA80L09180,X01C7D5FIFL0561C0,X0186A0EEAE80J02A380,X01C7D1FIFC0I01543,Y0A2A0AJAK0H82,Y061F57FIFJ0H506,Y020A82AEAEE0H0H20C,Y010FD5FJFH01551C,Y018680AJA80H0A18,Y01C7F5FJFC01543C,Y01C2E0EAEAEA00A830,Y01C1F17FJF015070,g0A0A8AKA8080A0,g071FD7FJFC550E0,g030EA2EAHAEA2A0C0,g0307D5FKF541C0,g0182A0AKAH8380,g01C7F5FKFD47,gG0C3A0EEAEAEE86,gG0E1F17FKF07,gG020A8AKAB0A,gG0387C7FJFC1C,gG0382A2AEAEAC28,gG01C3D1FJFC70,gH080A0AJAC20,gH061F57FIFC60,gH061E82AEAE8E0,gH071FD7FIF1C0,gH038A83AIA180,gH01C7D5FHFE380,gI0C6E2EAEE3,gH01C3F1FHFC3,gI0A2A8AHA82,gI061F57FF04,gI020A82EB0C,gI030FD7FF1C,gI010AA2AA08,gI01C7F7FC30,gJ0C3AHA830,gJ0C1F7F870,gJ020AAB0A0,gJ070FHF1C0,gJ0306AE1C0,gJ0187FC180,gJ0182A8380,gJ01C3FC7,gK0E1E86,gK071F0E,gK030A0C,gK07061C,gK038038,gK01C038,gL0C030,gL070E0,gL020C0,gL031C0,gL03B80,gL01F,gM0F,:gM06,gM04,,::::::::::::::::::::::::::::::^XA")
		MSCBWrite("^MMT")
		MSCBWrite("^PW679")
		MSCBWrite("^LL0280")
		MSCBWrite("^LS0")
		MSCBWrite("^FT0,224^XG000.GRF,1,1^FS")
		MSCBWrite("^FT16,262^A0N,25,24^FH\^FD"+Substr(SB1->B1_DESC,1,40)+"^FS")
		MSCBWrite("^FT264,35^A0N,23,24^FH\^FDProduto^FS")
		MSCBWrite("^FT16,226^A0N,23,24^FH\^FDDescri\87\C6o do Produto^FS")
		MSCBWrite("^BY2,3,51^FT396,194^BCN,,N,N")
		MSCBWrite("^FD>:"+Alltrim(STR(mv_par02))+"^FS")
		MSCBWrite("^BY2,3,51^FT264,96^BCN,,N,N")
		MSCBWrite("^FD>:"+Alltrim(SB1->B1_CODBAR)+"^FS")
		MSCBWrite("^FT263,162^A0N,25,24^FH\^FDQtd / Emb^FS")
		MSCBWrite("^FT261,196^A0N,25,24^FH\^FD"+Alltrim(STR(mv_par02))+' / '+Alltrim(STR(SB1->B1_QE))+"^FS")
		MSCBWrite("^FT264,122^A0N,23,24^FH\^FD"+Alltrim(SB1->B1_COD)+"^FS")
		MSCBWrite("^PQ1,0,1,Y^XZ")
		MSCBWrite("^XA^ID000.GRF^FS^XZ")
			
	Next x	
	
	MSCBEND()
	MSCBCLOSEPRINTER()	
		
endif

Return

******************************************************************************************************************
******************************************************************************************************************
&& Funcao: ValidPerg(cPerg)
&& Descricao: Verifica a existencia do grupo de perguntas, caso nao exista cria.
******************************************************************************************************************
******************************************************************************************************************
Static Function ValidPerg(cPerg)  

	Local sAlias := Alias()
	Local aRegs := {}
	Local i,j

	dbSelectArea("SX1")
	dbSetOrder(1)
	cPerg := PADR(cPerg,Len(SX1->X1_GRUPO))

	// Grupo/Ordem/Pergunta/Variavel/Tipo/Tamanho/Decimal/Presel/GSC/Valid/Var01/Def01/Cnt01/Var02/Def02/Cnt02/Var03/Def03/Cnt03/Var04/Def04/Cnt04/Var05/Def05/Cnt05
	aAdd(aRegs, {cPerg, "01", "Produto "		,"" ,"" ,"mv_ch1", "C", 15, 0, 0, "G", "", "mv_par01",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SB1"}) 
	aAdd(aRegs, {cPerg, "02", "Quantidade"		,"" ,"" ,"mv_ch2", "N", 11, 2, 0, "G", "", "mv_par02",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}) 
	aAdd(aRegs, {cPerg, "03", "Cópias "			,"" ,"" ,"mv_ch3", "N",  3, 0, 0, "G", "", "mv_par03",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}) 
	
	For i:=1 to Len(aRegs)
		If !dbSeek (cPerg + aRegs[i,2])
			RecLock("SX1",.T.)
			For j:=1 to FCount()
				If j <= Len(aRegs[i])
					FieldPut(j,aRegs[i,j])
				Endif
			Next
			MsUnlock()
		Endif
	Next
	dbSelectArea(sAlias)
Return

